apiVersion: v1
kind: ConfigMap
metadata:
  name: lutri2-kibana-config
data:
  kibana.yml: |
    elasticsearch.hosts: [ "http://lutri2-elastic-deployment-5d6648c8d7-knth2.apps.okd.codespring.ro:30129" ]
    server.name: kibana
    server.host: "0"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: lutri2-kibana
  name: lutri2-kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: lutri2-kibana
  template:
    metadata:
      labels:
        app: lutri2-kibana
    spec:
      containers:
        - image: kibana:7.8.1
          name: lutri2-kibana
          ports:
            - containerPort: 5601
              name: lutri2-kibana
          volumeMounts:
          - name: lutri2-kibana-config-volume
            mountPath: /usr/share/kibana/config/kibana.yml
            subPath: kibana.yml
      volumes:
      - name: lutri2-kibana-config-volume
        configMap:
          name: lutri2-kibana-config
---
apiVersion: v1
kind: Service
metadata:
  name: lutri2-kibana-service
  labels:
    app: lutri2-kibana
    project: elk
spec:
  selector:
      app: lutri2-kibana
  ports:
    - port: 5601
      targetPort: 5601
      protocol: TCP

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
    name: lutri2-elk-kibana-ingress
    annotations:
      kubernetes.io/ingress.class: nginx
spec:
    rules:
    - host: csa-lutri2-kibana.apps.okd.codespring.ro
      http:
        paths:
        - path: /
          backend:
            serviceName: lutri2-kibana-service
            servicePort: 5601