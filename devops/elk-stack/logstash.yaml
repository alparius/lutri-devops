kind: Deployment
apiVersion: apps/v1
metadata:
    name: lutri2-logstash
    labels:
      stack: lutri2
      component: lutri2-logstash
spec:
    replicas: 1
    selector:
      matchLabels:
        component: lutri2-logstash
    template:
      metadata:
        name: lutri2-logstash-pod
        labels:
          stack: lutri2
          component: lutri2-logstash
      spec:
        containers:
          - image: alparius/logstash
            name: logstash
            ports:
              # - containerPort: 5044
              #   name: filebeat
              - containerPort: 5000
                name: logstash-tcp

# ---
# kind: Service
# apiVersion: v1
# metadata:
#     name: lutri2-logstash-service-5044
#     labels:
#       stack: lutri2
#       component: lutri2-logstash
# spec:
#     selector:
#       component: lutri2-logstash
#     ports:
#     - protocol: TCP
#       port: 5044
#       targetPort: 5044
#       name: filebeat

---
kind: Service
apiVersion: v1
metadata:
    name: lutri2-logstash-service-5000
    labels:
      stack: lutri2
      component: lutri2-logstash
spec:
    selector:
      component: lutri2-logstash
    ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
      name: logstash-tcp

# ---
# apiVersion: extensions/v1beta1
# kind: Ingress
# metadata:
#     name: lutri2-logstash-ingress-5044
#     annotations:
#       kubernetes.io/ingress.class: nginx
# spec:
#     rules:
#     - host: lutri2-logstash-5044.k8s.codespring.ro
#       http:
#         paths:
#         - path: /
#           backend:
#             serviceName: lutri2-logstash-service-5044
#             servicePort: 5044

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
    name: lutri2-logstash-ingress-5000
    annotations:
      kubernetes.io/ingress.class: nginx
spec:
    rules:
    - host: lutri2-logstash-5000.k8s.codespring.ro
      http:
        paths:
        - path: /
          backend:
            serviceName: lutri2-logstash-service-5000
            servicePort: 5000