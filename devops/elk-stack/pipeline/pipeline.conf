input {
  tcp {
    port => 5000
    type => "logstash"
  }

  file {
    path => "/tmp/logs/lutri-high.log"
    start_position => "beginning"
    type => "errlogfile"
  }

  file {
    path => "/tmp/logs/lutri-low.log"
    start_position => "beginning"
    type => "inflogfile"
  }

  beats {
    port => 5044
    type => "filebeat"
  }
}


filter {
  if [type] == "filebeat" {
    json {
      source => "message"
    }
  }
  else { 
    grok {
      match => {"message" => '"func":"%{DATA:func}","level":"%{LOGLEVEL:Level}","msg":"%{DATA:Message}"' } 
      remove_field => [ "message" ]
    }
  }
}

filter {
  if [type] == "filebeat" {
    mutate {
      rename => {
        "level" => "Level"
        "msg" => "Message"
      }
      remove_field => [ "message" ]
    }
  }

  if [type] == "filebeat" {
    mutate {
      add_field => {"hostn" => "%{[host][hostname]}"}
    }
  } else {
    mutate {
      add_field => {"hostn" => "%{host}"}
    }
  }
}

filter {
  mutate {
    uppercase => [ "Level" ]
  }
}


output {
  stdout {
    codec => rubydebug
  }

  elasticsearch {
    hosts => [ "http://elk.apps.okd.codespring.ro:80" ]
    index => "lutri-%{[type]}-%{+yyyy-MM-dd}"
  } 
}