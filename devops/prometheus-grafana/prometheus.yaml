apiVersion: v1
kind: ConfigMap
metadata:
  name: lutri2-prometheus-config
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      external_labels:
        monitor: 'eks-dev-monitor'
    scrape_configs:
      - job_name: 'prometheus'
        scrape_interval: 10s
        static_configs:
          - targets: ['localhost:9090']
      - job_name: 'lutri2-backend'
        static_configs:
          - targets: ['lutri2-backend-service:8080']
        metrics_path: '/api/metrics'
      - job_name: 'mongodb'
        static_configs:
          - targets: ['lutri2-mongodb-service:27017']
# - job_name: 'grafana'
#   static_configs:
#     - targets: ['grafana:80']

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lutri2-prometheus
  labels:
    stack: lutri2
    component: lutri2-prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      component: lutri2-prometheus
  template:
    metadata:
      labels:
        stack: lutri2
        component: lutri2-prometheus
    spec:
      containers:
        - image: prom/prometheus:v2.20.0
          name: prometheus
          ports:
            - containerPort: 9090
              name: prometheus
          volumeMounts:
            - mountPath: /prometheus
              name: var-lib-prometheus
            - name: prometheus-config-volume
              mountPath: /etc/prometheus/prometheus.yml
              subPath: prometheus.yml
      volumes:
        - name: prometheus-config-volume
          configMap:
            name: lutri2-prometheus-config
        - name: var-lib-prometheus
          persistentVolumeClaim:
            claimName: lutri2-prometheus-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: lutri2-prometheus-service
  labels:
    stack: lutri2
    component: lutri2-prometheus
spec:
  type: ClusterIP
  selector:
    component: lutri2-prometheus
  ports:
    - port: 9090
      targetPort: 9090
      protocol: TCP

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
    name: lutri2-prometheus-ingress
    annotations:
      kubernetes.io/ingress.class: nginx
spec:
    rules:
    - host: csa-lutri2-prometheus.apps.okd.codespring.ro
      http:
        paths:
        - path: /
          backend:
            serviceName: lutri2-prometheus-service
            servicePort: 9090